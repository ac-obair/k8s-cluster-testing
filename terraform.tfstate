{
  "version": 4,
  "terraform_version": "0.12.29",
  "serial": 21,
  "lineage": "35e1a2a1-5e24-a7d9-397b-b4cf7515e005",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "helm_repository",
      "name": "jetstack",
      "provider": "provider.helm",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "ca_file": null,
            "cert_file": null,
            "id": "jetstack",
            "key_file": null,
            "metadata": [
              {
                "name": "jetstack",
                "url": "https://charts.jetstack.io"
              }
            ],
            "name": "jetstack",
            "password": null,
            "url": "https://charts.jetstack.io",
            "username": null
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "cluster-issuer",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: cert-manager.io/v1alpha3\nkind: ClusterIssuer\nmetadata:\n  name: ca-issuer\nspec:\n  ca:\n    secretName: ca-key-pair\n",
            "content_base64": "YXBpVmVyc2lvbjogY2VydC1tYW5hZ2VyLmlvL3YxYWxwaGEzCmtpbmQ6IENsdXN0ZXJJc3N1ZXIKbWV0YWRhdGE6CiAgbmFtZTogY2EtaXNzdWVyCnNwZWM6CiAgY2E6CiAgICBzZWNyZXROYW1lOiBjYS1rZXktcGFpcgo=",
            "filename": "./cert-manager-issuer.yaml",
            "id": "30d38456e6d0df458138f237f204856455a712d1"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "default-certificate-resource",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: cert-manager.io/v1alpha3\nkind: Certificate\nmetadata:\n  name: ingress-https\n  namespace: ingress-nginx\nspec:\n  commonName: kubernetes.docker.internal\n  dnsNames:\n    - kubernetes.docker.internal\n  secretName: ingress-https\n  issuerRef:\n    name: ca-issuer\n    kind: ClusterIssuer\n",
            "content_base64": "YXBpVmVyc2lvbjogY2VydC1tYW5hZ2VyLmlvL3YxYWxwaGEzCmtpbmQ6IENlcnRpZmljYXRlCm1ldGFkYXRhOgogIG5hbWU6IGluZ3Jlc3MtaHR0cHMKICBuYW1lc3BhY2U6IGluZ3Jlc3MtbmdpbngKc3BlYzoKICBjb21tb25OYW1lOiBrdWJlcm5ldGVzLmRvY2tlci5pbnRlcm5hbAogIGRuc05hbWVzOgogICAgLSBrdWJlcm5ldGVzLmRvY2tlci5pbnRlcm5hbAogIHNlY3JldE5hbWU6IGluZ3Jlc3MtaHR0cHMKICBpc3N1ZXJSZWY6CiAgICBuYW1lOiBjYS1pc3N1ZXIKICAgIGtpbmQ6IENsdXN0ZXJJc3N1ZXIK",
            "filename": "./ingress-controller-default-certificate.yaml",
            "id": "36d17326cc014fd9ebff81eec79ecb2bf95b46bd"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "int-ca-cert",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5N6q2nMquYtezgrV8EJ4\nzzBxXA5sJEmv4Sq2Qf6/wWMKPU4KdKPc3Cp+Q/Y+VMchcvCIQvvNJZrIP0XvMBEv\nGc5nIYg7ANSiLSqnjH6FPA35hQVtXNtm/P+yJUbecCu7+FYIrqpO9/ZSXu0tzlD9\nlzrgf2U98mZH9p0rf0ZAO1tZ67H/kngPGUQ6dpRFn7Fos9KhSkf4/93qIhOJVP9s\nk8rd6ccNsnvuleVDi+IA8O5el8jU88SkeRm9FCFM6s+ew5Wcl+1Xp45Mij5Nmnav\ngNEBz6C8axSpak0HcknwV4G4gilcuJXLPtKB5Uj9J348p7kQ2cG268yP0pa0x+Wy\n4QIDAQAB\n-----END PUBLIC KEY-----\n",
            "content_base64": "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE1TjZxMm5NcXVZdGV6Z3JWOEVKNAp6ekJ4WEE1c0pFbXY0U3EyUWY2L3dXTUtQVTRLZEtQYzNDcCtRL1krVk1jaGN2Q0lRdnZOSlpySVAwWHZNQkV2CkdjNW5JWWc3QU5TaUxTcW5qSDZGUEEzNWhRVnRYTnRtL1AreUpVYmVjQ3U3K0ZZSXJxcE85L1pTWHUwdHpsRDkKbHpyZ2YyVTk4bVpIOXAwcmYwWkFPMXRaNjdIL2tuZ1BHVVE2ZHBSRm43Rm9zOUtoU2tmNC85M3FJaE9KVlA5cwprOHJkNmNjTnNudnVsZVZEaStJQThPNWVsOGpVODhTa2VSbTlGQ0ZNNnMrZXc1V2NsKzFYcDQ1TWlqNU5tbmF2CmdORUJ6NkM4YXhTcGFrMEhja253VjRHNGdpbGN1SlhMUHRLQjVVajlKMzQ4cDdrUTJjRzI2OHlQMHBhMHgrV3kKNFFJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==",
            "filename": "./self-cert/public-key.pem",
            "id": "249b874e34881033d974ce2e4085e9583f5ee58f"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "local_file",
      "name": "int-ca-key",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA5N6q2nMquYtezgrV8EJ4zzBxXA5sJEmv4Sq2Qf6/wWMKPU4K\ndKPc3Cp+Q/Y+VMchcvCIQvvNJZrIP0XvMBEvGc5nIYg7ANSiLSqnjH6FPA35hQVt\nXNtm/P+yJUbecCu7+FYIrqpO9/ZSXu0tzlD9lzrgf2U98mZH9p0rf0ZAO1tZ67H/\nkngPGUQ6dpRFn7Fos9KhSkf4/93qIhOJVP9sk8rd6ccNsnvuleVDi+IA8O5el8jU\n88SkeRm9FCFM6s+ew5Wcl+1Xp45Mij5NmnavgNEBz6C8axSpak0HcknwV4G4gilc\nuJXLPtKB5Uj9J348p7kQ2cG268yP0pa0x+Wy4QIDAQABAoIBADPWq2QnSboU8zhA\nBA0TQUHMeyCas6vUdN3PStDP3qbyw9L25i9dHh1QEqFaGOwi3lSmXnatid3GnSyX\nroF4ou55baqOrK6XetQ4IRMVZSAhGi8i945cs4sCb1s6Hg/SGBU7h2Pod1J6nFWb\n6xAcEBQ85bR1Pf61Y/9bwgpl4w6OSLuJb0+wnOpR0iaVRRFFN/QkwUcEnklRzTGn\nDlikXK4wehKIsKoCvehxLCTY0g2duryzueEgEgv2Rm2vG+zkgALdnr6ckuWjJ/bz\nhRXkcWy1lpswPEq1uHrSNj8aodIE6HxHfDhhgXiqfPoxv5gN0KJ1DgJ4FgwcP1/y\n0HD8VPECgYEA9HA18XfdLi6OmVxc6VtXopabnPBU34kvmlAbsZvqnMzeE81GdmAe\nSf+BdcE5MgkZz3BtwChPxpZXTJG1vYfT0w39HKJreNX0/ZJazRGPDVNWf03xdvO6\nOEeCWSgucsSqFXR70w5vPdcdDIS7maNd6Qscemu4XtRaHq8GSqIR7I8CgYEA77Hx\n1LCT5peJVVnUX89zwoDifKnelrSO4XR9iKwicprBUzMmgv5sIYggQiILrnDnzLbw\nLiqNTSgVP4gM4tt90K/pLve5/1dS2RtspFAsbCSqZYUVuMHAnxHpxjRLEtgOKQAF\nAEApR5/ueuJVV8H7EDWog4lRbHBCTMfqXPmqAY8CgYA/+/ty2MBx7UfwhwffIcTf\nz3Kucw6UcPGgACYvqLOSFeJv5oTySZjEH/jAXTLekRlLfo+MBEFVp1b0uROMqDhf\nf8Losu9U8xStJ5lTIqyCfXUf38Q8MfJl9vn84pK+AhLPiO08wwOFeYCmHTyKLARS\nE1GCDh513Do22/PWp3PvqwKBgQCnjYgy2UxKANvrYePnJakR6e5onoYOayEF0Nx/\n0XQzEKLbegINx7PmrLWABTSNODeRDsBORUiJCt/vjTcUzcHhQ1aJknneWDh9s4H6\nSmEDJ45FcQaCJE5145u7BYsFHSqo1m6ogjFY9B9MnzJxKhRKfHfTmwXj+4UdDxJw\n88U3WQKBgQDGE5LhgNoln5IkIPNiPAxMMED9TFL0L/BIRdPfxlAhPk2gUJ24CHGg\nrXNVZudrgeQuv/shC58KP4kH5GdGaQ//y/cnBxpyPvc/MotdejNB+o9ieUPZBXQG\nraxJFf0d9P0YtkcIq65i2Rrf7h60QhGPsUuyz52lOzXuvJV0J93H0Q==\n-----END RSA PRIVATE KEY-----\n",
            "content_base64": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNU42cTJuTXF1WXRlemdyVjhFSjR6ekJ4WEE1c0pFbXY0U3EyUWY2L3dXTUtQVTRLCmRLUGMzQ3ArUS9ZK1ZNY2hjdkNJUXZ2TkpacklQMFh2TUJFdkdjNW5JWWc3QU5TaUxTcW5qSDZGUEEzNWhRVnQKWE50bS9QK3lKVWJlY0N1NytGWUlycXBPOS9aU1h1MHR6bEQ5bHpyZ2YyVTk4bVpIOXAwcmYwWkFPMXRaNjdILwprbmdQR1VRNmRwUkZuN0ZvczlLaFNrZjQvOTNxSWhPSlZQOXNrOHJkNmNjTnNudnVsZVZEaStJQThPNWVsOGpVCjg4U2tlUm05RkNGTTZzK2V3NVdjbCsxWHA0NU1pajVObW5hdmdORUJ6NkM4YXhTcGFrMEhja253VjRHNGdpbGMKdUpYTFB0S0I1VWo5SjM0OHA3a1EyY0cyNjh5UDBwYTB4K1d5NFFJREFRQUJBb0lCQURQV3EyUW5TYm9VOHpoQQpCQTBUUVVITWV5Q2FzNnZVZE4zUFN0RFAzcWJ5dzlMMjVpOWRIaDFRRXFGYUdPd2kzbFNtWG5hdGlkM0duU3lYCnJvRjRvdTU1YmFxT3JLNlhldFE0SVJNVlpTQWhHaThpOTQ1Y3M0c0NiMXM2SGcvU0dCVTdoMlBvZDFKNm5GV2IKNnhBY0VCUTg1YlIxUGY2MVkvOWJ3Z3BsNHc2T1NMdUpiMCt3bk9wUjBpYVZSUkZGTi9Ra3dVY0Vua2xSelRHbgpEbGlrWEs0d2VoS0lzS29DdmVoeExDVFkwZzJkdXJ5enVlRWdFZ3YyUm0ydkcremtnQUxkbnI2Y2t1V2pKL2J6CmhSWGtjV3kxbHBzd1BFcTF1SHJTTmo4YW9kSUU2SHhIZkRoaGdYaXFmUG94djVnTjBLSjFEZ0o0Rmd3Y1AxL3kKMEhEOFZQRUNnWUVBOUhBMThYZmRMaTZPbVZ4YzZWdFhvcGFiblBCVTM0a3ZtbEFic1p2cW5NemVFODFHZG1BZQpTZitCZGNFNU1na1p6M0J0d0NoUHhwWlhUSkcxdllmVDB3MzlIS0pyZU5YMC9aSmF6UkdQRFZOV2YwM3hkdk82Ck9FZUNXU2d1Y3NTcUZYUjcwdzV2UGRjZERJUzdtYU5kNlFzY2VtdTRYdFJhSHE4R1NxSVI3SThDZ1lFQTc3SHgKMUxDVDVwZUpWVm5VWDg5endvRGlmS25lbHJTTzRYUjlpS3dpY3ByQlV6TW1ndjVzSVlnZ1FpSUxybkRuekxidwpMaXFOVFNnVlA0Z000dHQ5MEsvcEx2ZTUvMWRTMlJ0c3BGQXNiQ1NxWllVVnVNSEFueEhweGpSTEV0Z09LUUFGCkFFQXBSNS91ZXVKVlY4SDdFRFdvZzRsUmJIQkNUTWZxWFBtcUFZOENnWUEvKy90eTJNQng3VWZ3aHdmZkljVGYKejNLdWN3NlVjUEdnQUNZdnFMT1NGZUp2NW9UeVNaakVIL2pBWFRMZWtSbExmbytNQkVGVnAxYjB1Uk9NcURoZgpmOExvc3U5VTh4U3RKNWxUSXF5Q2ZYVWYzOFE4TWZKbDl2bjg0cEsrQWhMUGlPMDh3d09GZVlDbUhUeUtMQVJTCkUxR0NEaDUxM0RvMjIvUFdwM1B2cXdLQmdRQ25qWWd5MlV4S0FOdnJZZVBuSmFrUjZlNW9ub1lPYXlFRjBOeC8KMFhRekVLTGJlZ0lOeDdQbXJMV0FCVFNOT0RlUkRzQk9SVWlKQ3QvdmpUY1V6Y0hoUTFhSmtubmVXRGg5czRINgpTbUVESjQ1RmNRYUNKRTUxNDV1N0JZc0ZIU3FvMW02b2dqRlk5QjlNbnpKeEtoUktmSGZUbXdYais0VWREeEp3Cjg4VTNXUUtCZ1FER0U1TGhnTm9sbjVJa0lQTmlQQXhNTUVEOVRGTDBML0JJUmRQZnhsQWhQazJnVUoyNENIR2cKclhOVlp1ZHJnZVF1di9zaEM1OEtQNGtINUdkR2FRLy95L2NuQnhweVB2Yy9Nb3RkZWpOQitvOWllVVBaQlhRRwpyYXhKRmYwZDlQMFl0a2NJcTY1aTJScmY3aDYwUWhHUHNVdXl6NTJsT3pYdXZKVjBKOTNIMFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
            "filename": "./self-cert/private-key.pem",
            "id": "c81f3be30540aadd60c732e1aef5e879b768386e"
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "cert-manager",
      "provider": "provider.helm",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "jetstack/cert-manager",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "cert-manager",
            "keyring": null,
            "lint": false,
            "max_history": 0,
            "metadata": [
              {
                "chart": "cert-manager",
                "name": "cert-manager",
                "namespace": "cert-manager",
                "revision": 1,
                "values": "{\"installCRDs\":true}",
                "version": "v0.15.2"
              }
            ],
            "name": "cert-manager",
            "namespace": "cert-manager",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "jetstack",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "installCRDs",
                "type": "",
                "value": "true"
              }
            ],
            "set_sensitive": [],
            "set_string": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "v0.15.2",
            "wait": true
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_cluster_role",
      "name": "ingress-nginx",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "nginx-ingress-clusterrole",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "nginx-ingress-clusterrole",
                "resource_version": "603079",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/clusterroles/nginx-ingress-clusterrole",
                "uid": "8eb2e915-b9df-43bd-a80c-7dbfa8646e64"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "configmaps",
                  "endpoints",
                  "nodes",
                  "pods",
                  "secrets"
                ],
                "verbs": [
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "nodes"
                ],
                "verbs": [
                  "get"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "services"
                ],
                "verbs": [
                  "get",
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  "networking.k8s.io"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "ingresses"
                ],
                "verbs": [
                  "get",
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "events"
                ],
                "verbs": [
                  "create",
                  "patch"
                ]
              },
              {
                "api_groups": [
                  "networking.k8s.io"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "ingresses/status"
                ],
                "verbs": [
                  "update"
                ]
              },
              {
                "api_groups": [
                  "extensions"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "ingresses"
                ],
                "verbs": [
                  "get",
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  "extensions"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "ingresses/status"
                ],
                "verbs": [
                  "update"
                ]
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_cluster_role_binding",
      "name": "ingress-nginx",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "nginx-ingress-clusterrole-nisa-binding",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "nginx-ingress-clusterrole-nisa-binding",
                "resource_version": "603081",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/nginx-ingress-clusterrole-nisa-binding",
                "uid": "2548b531-ad3e-4af8-b9e8-f2dbcdd045bd"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "nginx-ingress-clusterrole"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "nginx-ingress-serviceaccount",
                "namespace": "ingress-nginx"
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "ingress-nginx",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "hsts": "false",
              "hsts-include-subdomains": "false",
              "hsts-max-age": "0",
              "hsts-preload": "false",
              "ssl-dh-param": "ingress-nginx/ingress-dhparams",
              "use-forwarded-headers": "true"
            },
            "id": "ingress-nginx/nginx-configuration",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "nginx-configuration",
                "namespace": "ingress-nginx",
                "resource_version": "603101",
                "self_link": "/api/v1/namespaces/ingress-nginx/configmaps/nginx-configuration",
                "uid": "ceac3546-13ac-4592-86d7-3c4fce7e544e"
              }
            ]
          },
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ingress-nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_daemonset",
      "name": "ingress-nginx",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx/nginx-ingress-controller",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "nginx-ingress-controller",
                "namespace": "ingress-nginx",
                "resource_version": "603300",
                "self_link": "/apis/apps/v1/namespaces/ingress-nginx/daemonsets/nginx-ingress-controller",
                "uid": "7b0ae8d7-696c-41f1-948e-dc3b5e066d7b"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app.kubernetes.io/name": "ingress-nginx",
                      "app.kubernetes.io/part-of": "ingress-nginx"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_unavailable": "1"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {
                          "prometheus.io/port": "10254",
                          "prometheus.io/scrape": "true"
                        },
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app.kubernetes.io/name": "ingress-nginx",
                          "app.kubernetes.io/part-of": "ingress-nginx"
                        },
                        "name": "",
                        "resource_version": "",
                        "self_link": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [
                              "/nginx-ingress-controller",
                              "--configmap=$(POD_NAMESPACE)/nginx-configuration",
                              "--publish-service=$(POD_NAMESPACE)/ingress-nginx",
                              "--annotations-prefix=nginx.ingress.kubernetes.io",
                              "--default-backend-service=$(POD_NAMESPACE)/default-http-backend",
                              "--default-ssl-certificate=ingress-nginx/ingress-https"
                            ],
                            "command": [],
                            "env": [
                              {
                                "name": "POD_NAME",
                                "value": "",
                                "value_from": [
                                  {
                                    "config_map_key_ref": [],
                                    "field_ref": [
                                      {
                                        "api_version": "v1",
                                        "field_path": "metadata.name"
                                      }
                                    ],
                                    "resource_field_ref": [],
                                    "secret_key_ref": []
                                  }
                                ]
                              },
                              {
                                "name": "POD_NAMESPACE",
                                "value": "",
                                "value_from": [
                                  {
                                    "config_map_key_ref": [],
                                    "field_ref": [
                                      {
                                        "api_version": "v1",
                                        "field_path": "metadata.namespace"
                                      }
                                    ],
                                    "resource_field_ref": [],
                                    "secret_key_ref": []
                                  }
                                ]
                              }
                            ],
                            "env_from": [],
                            "image": "quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.33.0",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/healthz",
                                    "port": "10254",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 10,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 1
                              }
                            ],
                            "name": "nginx-ingress-controller",
                            "port": [
                              {
                                "container_port": 80,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "http",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 443,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "https",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/healthz",
                                    "port": "10254",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 0,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 1
                              }
                            ],
                            "resources": [
                              {
                                "limits": [],
                                "requests": [
                                  {
                                    "cpu": "50m",
                                    "memory": "150Mi"
                                  }
                                ]
                              }
                            ],
                            "security_context": [
                              {
                                "allow_privilege_escalation": true,
                                "capabilities": [
                                  {
                                    "add": [
                                      "NET_BIND_SERVICE"
                                    ],
                                    "drop": [
                                      "ALL"
                                    ]
                                  }
                                ],
                                "privileged": false,
                                "read_only_root_filesystem": false,
                                "run_as_group": 0,
                                "run_as_non_root": false,
                                "run_as_user": 101,
                                "se_linux_options": []
                              }
                            ],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "restart_policy": "Always",
                        "security_context": [],
                        "service_account_name": "nginx-ingress-serviceaccount",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "kubernetes_namespace.ingress-nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "default-http-backend",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx/default-http-backend",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "default-http-backend",
                "namespace": "ingress-nginx",
                "resource_version": "603391",
                "self_link": "/apis/apps/v1/namespaces/ingress-nginx/deployments/default-http-backend",
                "uid": "31a9c7ca-fbda-4b52-9024-8466a5466ce8"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": 1,
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "default-http-backend"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "default-http-backend"
                        },
                        "name": "",
                        "namespace": "ingress-nginx",
                        "resource_version": "",
                        "self_link": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": false,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "gcr.io/google_containers/defaultbackend:1.4",
                            "image_pull_policy": "IfNotPresent",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/healthz",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 30,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 5
                              }
                            ],
                            "name": "default-http-backend",
                            "port": [
                              {
                                "container_port": 8080,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": [
                                  {
                                    "cpu": "10m",
                                    "memory": "20Mi"
                                  }
                                ],
                                "requests": [
                                  {
                                    "cpu": "10m",
                                    "memory": "20Mi"
                                  }
                                ]
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "restart_policy": "Always",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 60,
                        "toleration": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "kubernetes_namespace.ingress-nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_limit_range",
      "name": "namespace-limits",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "default/default",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "default",
                "namespace": "default",
                "resource_version": "603080",
                "self_link": "/api/v1/namespaces/default/limitranges/default",
                "uid": "dc2e4dc6-5672-4c6a-bbea-740e05dcbd7d"
              }
            ],
            "spec": [
              {
                "limit": [
                  {
                    "default": {
                      "cpu": "500m",
                      "memory": "512Mi"
                    },
                    "default_request": {
                      "cpu": "50m",
                      "memory": "256Mi"
                    },
                    "max": {},
                    "max_limit_request_ratio": {},
                    "min": {},
                    "type": "Container"
                  }
                ]
              }
            ]
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "cert-manager",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "cert-manager",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "cert-manager",
                "resource_version": "603078",
                "self_link": "/api/v1/namespaces/cert-manager",
                "uid": "6a8ac288-3f45-4cc2-90e5-ac6eb4bf1c29"
              }
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "ingress-nginx",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "ingress-nginx",
                "resource_version": "603077",
                "self_link": "/api/v1/namespaces/ingress-nginx",
                "uid": "c31b8acb-eb2e-4ef5-8d16-e62e5887432c"
              }
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_role",
      "name": "ingress-nginx",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx/nginx-ingress-role",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "nginx-ingress-role",
                "namespace": "ingress-nginx",
                "resource_version": "603092",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/namespaces/ingress-nginx/roles/nginx-ingress-role",
                "uid": "abf05841-71d1-4f31-9e08-a5d842d647c7"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "resource_names": [],
                "resources": [
                  "configmaps",
                  "namespaces",
                  "pods",
                  "secrets"
                ],
                "verbs": [
                  "get"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "resource_names": [
                  "ingress-controller-leader-nginx"
                ],
                "resources": [
                  "configmaps"
                ],
                "verbs": [
                  "get",
                  "update"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "resource_names": [],
                "resources": [
                  "configmaps"
                ],
                "verbs": [
                  "create"
                ]
              },
              {
                "api_groups": [
                  ""
                ],
                "resource_names": [],
                "resources": [
                  "endpoints"
                ],
                "verbs": [
                  "get"
                ]
              }
            ]
          },
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ingress-nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_role_binding",
      "name": "ingress-nginx",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx/nginx-ingress-role-nisa-binding",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "nginx-ingress-role-nisa-binding",
                "namespace": "ingress-nginx",
                "resource_version": "603088",
                "self_link": "/apis/rbac.authorization.k8s.io/v1/namespaces/ingress-nginx/rolebindings/nginx-ingress-role-nisa-binding",
                "uid": "12276a60-4d45-4ec8-a5aa-0c3e2a29f03f"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "nginx-ingress-role"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "nginx-ingress-serviceaccount",
                "namespace": "ingress-nginx"
              }
            ]
          },
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ingress-nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "ca-key-pair",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "data": {
              "tls.crt": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5N6q2nMquYtezgrV8EJ4\nzzBxXA5sJEmv4Sq2Qf6/wWMKPU4KdKPc3Cp+Q/Y+VMchcvCIQvvNJZrIP0XvMBEv\nGc5nIYg7ANSiLSqnjH6FPA35hQVtXNtm/P+yJUbecCu7+FYIrqpO9/ZSXu0tzlD9\nlzrgf2U98mZH9p0rf0ZAO1tZ67H/kngPGUQ6dpRFn7Fos9KhSkf4/93qIhOJVP9s\nk8rd6ccNsnvuleVDi+IA8O5el8jU88SkeRm9FCFM6s+ew5Wcl+1Xp45Mij5Nmnav\ngNEBz6C8axSpak0HcknwV4G4gilcuJXLPtKB5Uj9J348p7kQ2cG268yP0pa0x+Wy\n4QIDAQAB\n-----END PUBLIC KEY-----\n",
              "tls.key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA5N6q2nMquYtezgrV8EJ4zzBxXA5sJEmv4Sq2Qf6/wWMKPU4K\ndKPc3Cp+Q/Y+VMchcvCIQvvNJZrIP0XvMBEvGc5nIYg7ANSiLSqnjH6FPA35hQVt\nXNtm/P+yJUbecCu7+FYIrqpO9/ZSXu0tzlD9lzrgf2U98mZH9p0rf0ZAO1tZ67H/\nkngPGUQ6dpRFn7Fos9KhSkf4/93qIhOJVP9sk8rd6ccNsnvuleVDi+IA8O5el8jU\n88SkeRm9FCFM6s+ew5Wcl+1Xp45Mij5NmnavgNEBz6C8axSpak0HcknwV4G4gilc\nuJXLPtKB5Uj9J348p7kQ2cG268yP0pa0x+Wy4QIDAQABAoIBADPWq2QnSboU8zhA\nBA0TQUHMeyCas6vUdN3PStDP3qbyw9L25i9dHh1QEqFaGOwi3lSmXnatid3GnSyX\nroF4ou55baqOrK6XetQ4IRMVZSAhGi8i945cs4sCb1s6Hg/SGBU7h2Pod1J6nFWb\n6xAcEBQ85bR1Pf61Y/9bwgpl4w6OSLuJb0+wnOpR0iaVRRFFN/QkwUcEnklRzTGn\nDlikXK4wehKIsKoCvehxLCTY0g2duryzueEgEgv2Rm2vG+zkgALdnr6ckuWjJ/bz\nhRXkcWy1lpswPEq1uHrSNj8aodIE6HxHfDhhgXiqfPoxv5gN0KJ1DgJ4FgwcP1/y\n0HD8VPECgYEA9HA18XfdLi6OmVxc6VtXopabnPBU34kvmlAbsZvqnMzeE81GdmAe\nSf+BdcE5MgkZz3BtwChPxpZXTJG1vYfT0w39HKJreNX0/ZJazRGPDVNWf03xdvO6\nOEeCWSgucsSqFXR70w5vPdcdDIS7maNd6Qscemu4XtRaHq8GSqIR7I8CgYEA77Hx\n1LCT5peJVVnUX89zwoDifKnelrSO4XR9iKwicprBUzMmgv5sIYggQiILrnDnzLbw\nLiqNTSgVP4gM4tt90K/pLve5/1dS2RtspFAsbCSqZYUVuMHAnxHpxjRLEtgOKQAF\nAEApR5/ueuJVV8H7EDWog4lRbHBCTMfqXPmqAY8CgYA/+/ty2MBx7UfwhwffIcTf\nz3Kucw6UcPGgACYvqLOSFeJv5oTySZjEH/jAXTLekRlLfo+MBEFVp1b0uROMqDhf\nf8Losu9U8xStJ5lTIqyCfXUf38Q8MfJl9vn84pK+AhLPiO08wwOFeYCmHTyKLARS\nE1GCDh513Do22/PWp3PvqwKBgQCnjYgy2UxKANvrYePnJakR6e5onoYOayEF0Nx/\n0XQzEKLbegINx7PmrLWABTSNODeRDsBORUiJCt/vjTcUzcHhQ1aJknneWDh9s4H6\nSmEDJ45FcQaCJE5145u7BYsFHSqo1m6ogjFY9B9MnzJxKhRKfHfTmwXj+4UdDxJw\n88U3WQKBgQDGE5LhgNoln5IkIPNiPAxMMED9TFL0L/BIRdPfxlAhPk2gUJ24CHGg\nrXNVZudrgeQuv/shC58KP4kH5GdGaQ//y/cnBxpyPvc/MotdejNB+o9ieUPZBXQG\nraxJFf0d9P0YtkcIq65i2Rrf7h60QhGPsUuyz52lOzXuvJV0J93H0Q==\n-----END RSA PRIVATE KEY-----\n"
            },
            "id": "cert-manager/ca-key-pair",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "ca-key-pair",
                "namespace": "cert-manager",
                "resource_version": "603091",
                "self_link": "/api/v1/namespaces/cert-manager/secrets/ca-key-pair",
                "uid": "73efb72d-c7d4-4e4f-958c-d00fa95cdae2"
              }
            ],
            "type": "Opaque"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.cert-manager"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "ingress-nginx",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "data": {
              "dhparam.pem": "-----BEGIN DH PARAMETERS-----\nMIIBCAKCAQEA1CE5WycI8Gk6/2bQs5I8SmhHSm1UoDHgYw7zHg9fAPX6AN1Y0bJW\nDVs69Q/6Xte6DmmJxGshbq6zhqqHbHQSKrYUsAAeA5dNHlnxfDitKxPqwJ46AFbe\ng2Eeg5ErUzOAXFadYgIamGu7rBhETiM1uzMn+yRk3zSX5Hvv56oay0m+7fZBj01I\nZa7YyXLwfs4aPDRjLlVyeto+T6Hm+JmGlpp6MCUvLU0/J25BUlu8I/9lWlicyEoO\nvufzrpbZ8oigvMWywPxaCXSag7nKpVYx/bgtepnpAqy2vIUCYWxgYH/+jC/OnRjY\nEhqhLm8kJSyJI27WQQDCY4Vqhei19vc5cwIBAg==\n-----END DH PARAMETERS-----\n"
            },
            "id": "ingress-nginx/ingress-dhparams",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "ingress-dhparams",
                "namespace": "ingress-nginx",
                "resource_version": "603105",
                "self_link": "/api/v1/namespaces/ingress-nginx/secrets/ingress-dhparams",
                "uid": "63f0a688-fede-4645-aa5f-5d25dcf5b9e3"
              }
            ],
            "type": "Opaque"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ingress-nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "default-http-backend",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx/default-http-backend",
            "load_balancer_ingress": [],
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "default-http-backend",
                "namespace": "ingress-nginx",
                "resource_version": "603090",
                "self_link": "/api/v1/namespaces/ingress-nginx/services/default-http-backend",
                "uid": "31cea393-464f-4b24-b8b7-0ebc69ad872c"
              }
            ],
            "spec": [
              {
                "cluster_ip": "10.96.68.175",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "name": "http",
                    "node_port": 0,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "8080"
                  },
                  {
                    "name": "https",
                    "node_port": 0,
                    "port": 443,
                    "protocol": "TCP",
                    "target_port": "8080"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "default-http-backend"
                },
                "session_affinity": "None",
                "type": "ClusterIP"
              }
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "kubernetes_namespace.ingress-nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "ingress-nginx",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx/ingress-nginx",
            "load_balancer_ingress": [
              {
                "hostname": "localhost",
                "ip": ""
              }
            ],
            "metadata": [
              {
                "annotations": {
                  "service.beta.kubernetes.io/azure-load-balancer-internal": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "ingress-nginx",
                "namespace": "ingress-nginx",
                "resource_version": "603106",
                "self_link": "/api/v1/namespaces/ingress-nginx/services/ingress-nginx",
                "uid": "331678b6-1f89-49c5-ba24-7af764e4e608"
              }
            ],
            "spec": [
              {
                "cluster_ip": "10.104.61.21",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Local",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "name": "http",
                    "node_port": 32120,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "http"
                  },
                  {
                    "name": "https",
                    "node_port": 32676,
                    "port": 443,
                    "protocol": "TCP",
                    "target_port": "https"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "session_affinity": "None",
                "type": "NodePort"
              }
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "kubernetes_namespace.ingress-nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service_account",
      "name": "ingress-nginx",
      "provider": "provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": false,
            "default_secret_name": "nginx-ingress-serviceaccount-token-v8frn",
            "id": "ingress-nginx/nginx-ingress-serviceaccount",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "ingress-nginx",
                  "app.kubernetes.io/part-of": "ingress-nginx"
                },
                "name": "nginx-ingress-serviceaccount",
                "namespace": "ingress-nginx",
                "resource_version": "603099",
                "self_link": "/api/v1/namespaces/ingress-nginx/serviceaccounts/nginx-ingress-serviceaccount",
                "uid": "801be61e-c61c-4a0b-a621-2f37df50aeb7"
              }
            ],
            "secret": [],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMH19",
          "dependencies": [
            "kubernetes_namespace.ingress-nginx"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "cluster-issuer",
      "provider": "provider.null",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4492012648463473484",
            "triggers": {
              "manifest_sha1": "30d38456e6d0df458138f237f204856455a712d1"
            }
          },
          "private": "bnVsbA==",
          "dependencies": [
            "helm_release.cert-manager"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "default-certificate-resource",
      "provider": "provider.null",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "6266350001397501423",
            "triggers": {
              "manifest_sha1": "36d17326cc014fd9ebff81eec79ecb2bf95b46bd"
            }
          },
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_namespace.ingress-nginx"
          ]
        }
      ]
    }
  ]
}
